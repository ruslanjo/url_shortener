// Code generated by MockGen. DO NOT EDIT.
// Source: internal/app/storage/interfaces.go

// Package mock_storage is a generated GoMock package.
package mock_storage

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockStorage is a mock of Storage interface.
type MockStorage struct {
	ctrl     *gomock.Controller
	recorder *MockStorageMockRecorder
}

// MockStorageMockRecorder is the mock recorder for MockStorage.
type MockStorageMockRecorder struct {
	mock *MockStorage
}

// NewMockStorage creates a new mock instance.
func NewMockStorage(ctrl *gomock.Controller) *MockStorage {
	mock := &MockStorage{ctrl: ctrl}
	mock.recorder = &MockStorageMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockStorage) EXPECT() *MockStorageMockRecorder {
	return m.recorder
}

// AddShortURL mocks base method.
func (m *MockStorage) AddShortURL(shortLink, fullLink string) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "AddShortURL", shortLink, fullLink)
	ret0, _ := ret[0].(error)
	return ret0
}

// AddShortURL indicates an expected call of AddShortURL.
func (mr *MockStorageMockRecorder) AddShortURL(shortLink, fullLink interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "AddShortURL", reflect.TypeOf((*MockStorage)(nil).AddShortURL), shortLink, fullLink)
}

// GetURLByShortLink mocks base method.
func (m *MockStorage) GetURLByShortLink(shortLink string) (string, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetURLByShortLink", shortLink)
	ret0, _ := ret[0].(string)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetURLByShortLink indicates an expected call of GetURLByShortLink.
func (mr *MockStorageMockRecorder) GetURLByShortLink(shortLink interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetURLByShortLink", reflect.TypeOf((*MockStorage)(nil).GetURLByShortLink), shortLink)
}
